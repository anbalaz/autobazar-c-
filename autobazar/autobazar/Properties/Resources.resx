<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AutobazarManager_RunTheAutobazar_ConnectionNewFile" xml:space="preserve">
    <value>Did not find requested file, created new</value>
  </data>
  <data name="AutobazarManager_RunTheAutobazar_ConnectionOk" xml:space="preserve">
    <value>Connection is Ok</value>
  </data>
  <data name="AutobazarManager_RunTheAutobazar_DeleteWelcome" xml:space="preserve">
    <value>Please select Id of car which you want to delete or write exit to leave.</value>
  </data>
  <data name="AutobazarManager_RunTheAutobazar_Goodbye" xml:space="preserve">
    <value>Goodbye</value>
  </data>
  <data name="AutobazarManager_RunTheAutobazar_UpdateWelcome" xml:space="preserve">
    <value>Please select Id of car which you want to update or type exit to leave.</value>
  </data>
  <data name="AutobazarManager_RunTheAutobazar_Welcome" xml:space="preserve">
    <value>Welcome to Autobazar.
To see all cars press 0.
To add new car press 1.
To remove a car press 2.
To update information about car press 3.
To exit press 4.</value>
  </data>
  <data name="BazarManager_ChangeCarProperty_CarBrand" xml:space="preserve">
    <value>Do you wish to change the brand of car? Yes: 0, No: 1</value>
  </data>
  <data name="BazarManager_ChangeCarProperty_CarType" xml:space="preserve">
    <value>Do you wish to change the type of car? Yes: 0, No: 1</value>
  </data>
  <data name="BazarManager_ChangeCarProperty_Doors" xml:space="preserve">
    <value>Do you wish to change number of doors? Yes: 0, No: 1</value>
  </data>
  <data name="BazarManager_ChangeCarProperty_Fuel" xml:space="preserve">
    <value>Do you wish to change the type of fuel? Yes: 0, No: 1</value>
  </data>
  <data name="BazarManager_ChangeCarProperty_IsCarCrashed" xml:space="preserve">
    <value>Do you wish to change if car was in an accident? Yes: 0, No: 1</value>
  </data>
  <data name="BazarManager_ChangeCarProperty_Kilometers" xml:space="preserve">
    <value>Do you wish to change number of kilometers? Yes: 0, No: 1</value>
  </data>
  <data name="BazarManager_ChangeCarProperty_Price" xml:space="preserve">
    <value>Do you wish to change price? Yes: 0, No: 1</value>
  </data>
  <data name="BazarManager_ChangeCarProperty_Town" xml:space="preserve">
    <value>Do you wish to change town for selling the car? Yes: 0, No: 1</value>
  </data>
  <data name="BazarManager_ChangeCarProperty_Vintage" xml:space="preserve">
    <value>Do you wish to change vintage?  Yes: 0, No: 1</value>
  </data>
  <data name="BazarManager_ParseMethods_WrongInput" xml:space="preserve">
    <value>Wrong input, please try again</value>
  </data>
  <data name="BazarManager_ParseStringToBool_IsTheCrashed" xml:space="preserve">
    <value>Has the car ever been in the accident? true: 1, false: 2</value>
  </data>
  <data name="BazarManager_ParseStringToEnum_CarBrand" xml:space="preserve">
    <value>Please Insert Car Brand of your car or type exit to leave.</value>
  </data>
  <data name="BazarManager_ParseStringToEnum_CarType" xml:space="preserve">
    <value>Please Select Car Type or type exit to leave.</value>
  </data>
  <data name="BazarManager_ParseStringToEnum_Fuel" xml:space="preserve">
    <value>Please Select Type Of Fuel or type exit to leave.</value>
  </data>
  <data name="BazarManager_ParseStringToEnum_Town" xml:space="preserve">
    <value>Please select town where the car is going to be sell or type exit to leave.</value>
  </data>
  <data name="BazarManager_ParseStringToInt_Doors" xml:space="preserve">
    <value>Please insert number of doors or type exit to leave.</value>
  </data>
  <data name="BazarManager_ParseStringToInt_Kilometers" xml:space="preserve">
    <value>Please Insert number kilometers your car was used or type exit to leave.</value>
  </data>
  <data name="BazarManager_ParseStringToInt_Price" xml:space="preserve">
    <value>Please Insert Price or type exit to leave.</value>
  </data>
  <data name="BazarManager_ParseStringToInt_Vintage" xml:space="preserve">
    <value>Please Insert number of Vintage or type exit to leave.</value>
  </data>
  <data name="BazarManager_ShowAllCars_EmptyDb" xml:space="preserve">
    <value>There are no cars in the database</value>
  </data>
</root>